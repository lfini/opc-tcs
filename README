Procedure python per la gestione dell'osservatorio OPC

Luca Fini (luca.fini@gmail.com) - ottobre 2020

Codice previsto per python 3.x

NOTA: il codice sorgente è ospitato su: github.com/lfini/opc-tcs

----------------------------------------------------------------

PROCEDURA PRINCIPALE

dtracker.py: GUI per asservimento della cupola al moto del telescopio

Dipendenze: tkinter, pywin32

Il programma utilizza il protocollo ASCOM per controllare la cupola, e comunica
con il telescopio con il protocollo LX200 (su ethernet) implementato nel file telecomm.py

Il programma richiede una configurazione che può essere creata utilizzando
configure.py

Altre possibili opzioni sono descritte nella pagina di aiuto che si
ottiene lanciando il programma con l'opzione: -h


ALTRE PROCCEDURE DI SUPPORTO

telsimulator.py: simulatore del server del telescopio (parziale).
                 Vedi instruzioni di uso con: python telsimulator.py -h

timetest.py: Misura tempi di risposta tipici del server del telescopio 
astrotest.py: Verifica prestazioni delle procedure in astro.py (vedi sotto)

LIBRERIE

I seguenti file contengono varie funzioni utilizzate dalle procedure

ascom_fake.py: Finto server ASCOM per tests su Linux

astro.py  Implementazione di alcune funzioni di carattere astronomico (per
          evitare dipendenze da librerie esterne)

configure.py: gestione file di configurazione

interpolator.py: funzioni di interpolazione per modello geometrico
                 cupola-telescopio

telecomm.py: implementazione del protocollo LX200 per comunicazione con il
             telescopio. Può essere usato come porcedura per l'invio manuale
             di comandi al telescopio (help: python telecomm.py -h)

widgets.py: definizione widget utilizzati per la GUI


ALTRI FILES FORNITI

./icons/*.gif   Icone utilizzate dalla GUI

dometab_e.p  Tabelle di interpolazione per modello geometrico
dometab_w.p  cupola-telescopio
